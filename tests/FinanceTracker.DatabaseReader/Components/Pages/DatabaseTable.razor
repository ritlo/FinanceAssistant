
@page "/database"
@using FinanceTracker.DatabaseReader.Models

@using FinanceTracker.DatabaseReader.Services
@inject LiteDbTransactionReader LiteDbTransactionReader


<h1>Database Transactions</h1>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
else if (transactions == null || !transactions.Any())
{
    <p>No transactions found.</p>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Date</th>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in transactions)
            {
                <tr>
                    <td>@transaction.Date.ToShortDateString()</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("C2")</td>
                    <td>@transaction.Category?.Name</td>
                    <td>@transaction.Type</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Transaction>? transactions;
    private bool isLoading = true;
    private string? errorMessage;

    protected override void OnInitialized()
    {
        try
        {
            transactions = LiteDbTransactionReader.GetAllTransactions();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading transactions: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
